// ================= Configuração Hercules ==================================
// = _          _   _                     _           
// =| |__  _ __| | | | ___ _ __ ___ _   _| | ___  ___ 
// =| '_ \| '__| |_| |/ _ \ '__/ __| | | | |/ _ \/ __|
// =| |_) | |  |  _  |  __/ | | (__| |_| | |  __/\__ \
// =|_.__/|_|  |_| |_|\___|_|  \___|\__,_|_|\___||___/
// ================= Licença ================================================
// = Este arquivo é parte do Hércules.
// = Http://herc.ws - http://github.com/HerculesWS/Hercules
// = 
// = Emulador traduzido e atualizado para Português.
// = http://github.com/brHercules/Herc
// =
// = Copyright (C) 2014-2016 Hercules Dev Team
// =
// = Hercules é um software livre: você pode redistribuí-lo e / ou modificá
// =-Lo sob os termos da GNU General Public License conforme publicada pela
// = Free Software Foundation, tanto a versão 3 da licença, ou
// = (A seu critério) qualquer versão posterior.
// =
// = Este programa é distribuído na esperança que possa ser útil,
// = Mas SEM QUALQUER GARANTIA; mesmo sem a garantia implícita de
// = COMERCIALIZAÇÃO ou ADEQUAÇÃO A UM DETERMINADO FIM. veja a
// = GNU General Public License para mais detalhes.
// =
// = Você deve ter recebido uma cópia da Licença Pública Geral GNU
// = Junto com este programa. Se não, veja <http://www.gnu.org/licenses/>.
//=========================================================================
// Arquivo de configuração de batalha.
//=========================================================================
// Nota 1: Valor optativo (true/false, on/off, yes/no ou 1/0)
// Nota 2: O valor em porcentagem (100 significa 100%)
// Nota 3: O valor é um campo de bits. Se a descrição não é dada,
// assume tipos de unidade (1: Jogador, 2: Monstro, 4: Bicho de Estimação, 8: Homunculus, 16: Mercenários.)
//=========================================================================

// Configuração para habilitar o ataque físico (ataque base), 
// a força (str) ajuda a aumentar o dano (damage). (Nota 3)
enable_baseatk: 9

// Configuração para habilitar a esquiva perfeita. (Nota 3)
enable_perfect_flee: 1

// Configuração para habilitar os ataques críticos. (Nota 3)
// NOTA: Algumas habilidades (skills) agem independente dessa configuração.
enable_critical: 17

// Índice de ajuste de danos criticos para os não-jogadores (Nota 2)
mob_critical_rate: 100
critical_rate: 100

// Caso ataques normais tenham um atraso no movimento? (Nota 3)
// Se for falso, os personagens podem se mover assim que começar um ataque (animação de ataque
// ou a animação de ataque pode ser omitidos do lado do cliente, fazendo com que receba ataques ou
// monstros que se teletransportam para você)
// caso contrário, o atraso é igual ao 'animação de ataque "(amotion)
attack_walk_delay: 15

// Move-delay de ajuste depois de ser atingido. (Nota 2)
// O atraso 'não pode andar' depois de ser atingido é calculado como uma porcentagem da duração danos de animação.
// NOTA: Apenas afeta o atraso normal a partir de um único ataque, e não o atraso adicionado pela opção multihit_delay abaixo.
pc_damage_walk_delay_rate: 20
damage_walk_delay_rate: 100

// Move-delay ajuste para múltiplos ataques.
// Quando atingido por uma habilidade multi-bater como
// Lord of Vermillion ou Júpiter Trovão, o personagen será
// incapaz de se mover para um adicional "(número de visitas -1) * multihit_delay" milissegundos.
// 80 é a configuração original do Aegis (vs Sonic Blow)
// 230 é a configuração que faz walkdelay passado até o último hit (vs de Júpiter trovão)
multihit_delay: 80

// Taxa de atraso danificado para os jogadores (Nota 2)
// (Configuração para false / 0 será como sempre aguentar)
player_damage_delay_rate: 100

// Deve raça ou elemento a ser utilizado para considerar alguém mortos-vivos?
// 0 = elemento de mortos-vivos
// 1 = raça mortos-vivos
// 2 = ambas (ou uma obra)
undead_detect_type: 0

//  O  se atingido por um atributo que é mesmo que o seu próprio? (Nota 1)
// (Não funcionará no Renovação)
attribute_recover: false

// Qual é o Hitrate mínimo e máximo de ataques normais?
min_hitrate: 5
max_hitrate: 100

// Tipo de sanção que seja aplicada a fugir quando mais de monstros 
// agi_penalty_count está direcionando jogador
// 0 = nenhuma penalidade é aplicada
// 1 = agi_penalty_num é reduzido de Esquiva como um%
// 2 = agi_penalty_num é reduzido de Esquiva como um valor exato
agi_penalty_type: 1

// Quando agi penalidade é habilitado, a quem devo dirigir? (Nota 3)
// Por padrão, apenas os jogadores recebem a pena.
agi_penalty_target: 1

// Quantidade de inimigos que devem ser
// destinada jogador antes FLEE começa a ser penalizado.
agi_penalty_count: 3

// Quantidade de esquiva penalizado por cada monstro atacando mais de agi_penalty_count
agi_penalty_num: 10

// Tipo de sanção que é aplicada a ambos os equipamentos e vit DEF quando mais de monstros vit_penalty_count está direcionando jogador
// 0 = nenhuma penalidade é aplicada
// 1 = vit_penalty_num é reduzido de DEF como uma%
// 2 = vit_penalty_num é reduzido de DEF como um valor exato
vit_penalty_type: 1

//  Quando pena de vit está habilitado, a quem devo dirigir? (Nota 3)
// Por padrão, apenas os jogadores recebem a pena.
vit_penalty_target: 1

// Quantidade de inimigos que devem ser destinada jogador antes de defesa começa a ser penalizado.
vit_penalty_count: 3

// Quantidade de defesa VIT penalizado por cada monstro atacando mais de vit_penalty_count
vit_penalty_num: 5

// Use método alternativo de cálculo DEF para ataques físicos.
// Com 0, desativado (use% de redução def normal, com redução adicional def2)
// A 1 ou mais defesa é subtração de (DEF * valor).
// Por exemplo: 10 + 50 def se torna 0 + (10 * Tipo de + 50)
weapon_defense_type: 0

// MDEF, mesmo que acima .... (MDEF * Valor)
magic_defense_type: 0

// Mudança de direção do atacante para enfrentar oponente em cada ataque? (Nota 3)
// NOTA: Nos servidores oficiais knockback de algumas habilidades como Firewall é sempre baseada na
// Última direção andou. Mesmo quando atacando em uma direção completamente diferente, o
// Direção knockback não vai mudar, por isso, por exemplo, Se você caminhe para o norte e depois atacar um inimigo
// Sul você ainda vai ser batido para trás a sul pela parede de fogo. monstros imóveis
// Será sempre bateu de volta para o sul como sua direção padrão é o norte.
attack_direction_change: 0

// Para quem estiver definido, o seu elemento ataque inata não é "elemental"
// (100% versus em todos os elementos-defesa) (Nota 3)
// NOTA: Este é o cenário que o torna tão não-jogadores podem bater para o pleno
// Dano contra alvos do tipo Ghost com ataques normais (por exemplo: vs. Ghostring).
attack_attr_none: 14

// Taxa em que o equipamento pode quebrar (taxa de base antes de ser modificado por qualquer habilidade)
// 1 = 0,01% de chance. Predefinida para os servidores oficiais: 0
equip_natural_break_rate: 0

// Taxa global de que o seu próprio equipamento pode quebrar. (Nota 2)
// Esta taxa afeta a taxa de quebra pena de habilidades, como a energia de impulso e sua taxa de ruptura naturais
// (A partir de equip_natural_break_rate). Se habilidade Endow um de Sage falha e esta é superior a 0, o caractere selecionado de
// Arma será quebrado.
equip_self_break_rate: 100

// Taxa geral em que você pode quebrar o equipamento do alvo. (Nota 2)
// Isso afeta o comportamento de habilidades como terror ácido e colapso
equip_skill_break_rate: 100

// Faz ataques com armas tem um atraso de velocidade de ataque antes que o dano real é aplicado? (Nota 1)
// NOTA: A definição oficial é verdade, mesmo pensei que degrada o desempenho um pouco.
delay_battle_damage: true

// São as setas / munição consumida quando usado em um arco / arma?
// 0 = Nenhuma
// 1 = Sim
// 2 = Sim, mesmo para as competências que não especificam o consumo de seta quando disse
// Habilidade é arma de base e usado com armas de longo alcance (auto-suposições que
// habilidades deve consumir munição quando é adquirida através de um cartão ou plagiar)
arrow_decrement: 1

// Se o bônus roteiro item de verificação 'AutoSpell' para a faixa / obstáculos antes de lançar?
// Comportamento Oficial é falso, definindo este como true fará habilidades usar seu definida
// alcance. Por exemplo, Sonic Golpe requer uma distância de 2 célula antes autocasting é permitido.
// Essa configuração também afeta autospellwhenhit.
autospell_check_range: false

// Se ambos o atacante eo alvo estão na mesma telha, deve o alvo ser batido para trás para a esquerda?
// Comportamento Oficial é verdade, definindo este como false vai bater o alvo para trás do atacante.
knockback_left: true

// Se o alvo ser capaz de se esquivar danos por tirando fora da borda da tela?
// Comportamento Oficial é falsa
snap_dodge: false
